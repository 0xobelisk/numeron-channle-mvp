  // Copyright (c) Obelisk Labs, Inc.
  // SPDX-License-Identifier: Apache-2.0
  #[allow(unused_use)]
  
  /* Autogenerated file. Do not edit manually. */
  
  module numeron::numeron_monster_info {

  use std::ascii::String;

  public struct MonsterInfo has copy, drop, store {
    name: String,
    asset_frame: u256,
    current_hp: u256,
    max_hp: u256,
    attack_ids: vector<u64>,
    base_attack: u256,
    current_attack: u256,
    current_level: u256,
    base_exp: u256,
    current_exp: u256,
  }

  public fun new(
    name: String,
    asset_frame: u256,
    current_hp: u256,
    max_hp: u256,
    attack_ids: vector<u64>,
    base_attack: u256,
    current_attack: u256,
    current_level: u256,
    base_exp: u256,
    current_exp: u256,
  ): MonsterInfo {
    MonsterInfo {
                                   name,asset_frame,current_hp,max_hp,attack_ids,base_attack,current_attack,current_level,base_exp,current_exp
                               }
  }

  public fun get(self: &MonsterInfo): (String,u256,u256,u256,vector<u64>,u256,u256,u256,u256,u256) {
    (self.name,self.asset_frame,self.current_hp,self.max_hp,self.attack_ids,self.base_attack,self.current_attack,self.current_level,self.base_exp,self.current_exp)
  }

  public fun get_name(self: &MonsterInfo): String {
    self.name
  }

  public fun get_asset_frame(self: &MonsterInfo): u256 {
    self.asset_frame
  }

  public fun get_current_hp(self: &MonsterInfo): u256 {
    self.current_hp
  }

  public fun get_max_hp(self: &MonsterInfo): u256 {
    self.max_hp
  }

  public fun get_attack_ids(self: &MonsterInfo): vector<u64> {
    self.attack_ids
  }

  public fun get_base_attack(self: &MonsterInfo): u256 {
    self.base_attack
  }

  public fun get_current_attack(self: &MonsterInfo): u256 {
    self.current_attack
  }

  public fun get_current_level(self: &MonsterInfo): u256 {
    self.current_level
  }

  public fun get_base_exp(self: &MonsterInfo): u256 {
    self.base_exp
  }

  public fun get_current_exp(self: &MonsterInfo): u256 {
    self.current_exp
  }

  public(package) fun set_name(self: &mut MonsterInfo, name: String) {
    self.name = name;
  }

  public(package) fun set_asset_frame(self: &mut MonsterInfo, asset_frame: u256) {
    self.asset_frame = asset_frame;
  }

  public(package) fun set_current_hp(self: &mut MonsterInfo, current_hp: u256) {
    self.current_hp = current_hp;
  }

  public(package) fun set_max_hp(self: &mut MonsterInfo, max_hp: u256) {
    self.max_hp = max_hp;
  }

  public(package) fun set_attack_ids(self: &mut MonsterInfo, attack_ids: vector<u64>) {
    self.attack_ids = attack_ids;
  }

  public(package) fun set_base_attack(self: &mut MonsterInfo, base_attack: u256) {
    self.base_attack = base_attack;
  }

  public(package) fun set_current_attack(self: &mut MonsterInfo, current_attack: u256) {
    self.current_attack = current_attack;
  }

  public(package) fun set_current_level(self: &mut MonsterInfo, current_level: u256) {
    self.current_level = current_level;
  }

  public(package) fun set_base_exp(self: &mut MonsterInfo, base_exp: u256) {
    self.base_exp = base_exp;
  }

  public(package) fun set_current_exp(self: &mut MonsterInfo, current_exp: u256) {
    self.current_exp = current_exp;
  }

  public(package) fun set(
    self: &mut MonsterInfo,
    name: String,
    asset_frame: u256,
    current_hp: u256,
    max_hp: u256,
    attack_ids: vector<u64>,
    base_attack: u256,
    current_attack: u256,
    current_level: u256,
    base_exp: u256,
    current_exp: u256,
  ) {
    self.name = name;
    self.asset_frame = asset_frame;
    self.current_hp = current_hp;
    self.max_hp = max_hp;
    self.attack_ids = attack_ids;
    self.base_attack = base_attack;
    self.current_attack = current_attack;
    self.current_level = current_level;
    self.base_exp = base_exp;
    self.current_exp = current_exp;
  }
}
