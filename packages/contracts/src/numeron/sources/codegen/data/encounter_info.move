  // Copyright (c) Obelisk Labs, Inc.
  // SPDX-License-Identifier: Apache-2.0
  #[allow(unused_use)]
  
  /* Autogenerated file. Do not edit manually. */
  
  module numeron::numeron_encounter_info {

  use std::ascii::String;

  public struct EncounterInfo has copy, drop, store {
    monster_id: u256,
    player_monster_id: u256,
    is_battling: bool,
  }

  public fun new(monster_id: u256, player_monster_id: u256, is_battling: bool): EncounterInfo {
    EncounterInfo {
                                   monster_id,player_monster_id,is_battling
                               }
  }

  public fun get(self: &EncounterInfo): (u256,u256,bool) {
    (self.monster_id,self.player_monster_id,self.is_battling)
  }

  public fun get_monster_id(self: &EncounterInfo): u256 {
    self.monster_id
  }

  public fun get_player_monster_id(self: &EncounterInfo): u256 {
    self.player_monster_id
  }

  public fun get_is_battling(self: &EncounterInfo): bool {
    self.is_battling
  }

  public(package) fun set_monster_id(self: &mut EncounterInfo, monster_id: u256) {
    self.monster_id = monster_id;
  }

  public(package) fun set_player_monster_id(self: &mut EncounterInfo, player_monster_id: u256) {
    self.player_monster_id = player_monster_id;
  }

  public(package) fun set_is_battling(self: &mut EncounterInfo, is_battling: bool) {
    self.is_battling = is_battling;
  }

  public(package) fun set(self: &mut EncounterInfo, monster_id: u256, player_monster_id: u256, is_battling: bool) {
    self.monster_id = monster_id;
    self.player_monster_id = player_monster_id;
    self.is_battling = is_battling;
  }
}
