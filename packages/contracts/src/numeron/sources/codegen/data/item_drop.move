  // Copyright (c) Obelisk Labs, Inc.
  // SPDX-License-Identifier: Apache-2.0
  #[allow(unused_use)]
  
  /* Autogenerated file. Do not edit manually. */
  
  module numeron::numeron_item_drop {

  use std::ascii::String;

  public struct ItemDrop has copy, drop, store {
    item_ids: vector<u256>,
    quantities: vector<u256>,
    actual_rates: vector<u256>,
    rates: vector<u256>,
  }

  public fun new(
    item_ids: vector<u256>,
    quantities: vector<u256>,
    actual_rates: vector<u256>,
    rates: vector<u256>,
  ): ItemDrop {
    ItemDrop {
                                   item_ids,quantities,actual_rates,rates
                               }
  }

  public fun get(self: &ItemDrop): (vector<u256>,vector<u256>,vector<u256>,vector<u256>) {
    (self.item_ids,self.quantities,self.actual_rates,self.rates)
  }

  public fun get_item_ids(self: &ItemDrop): vector<u256> {
    self.item_ids
  }

  public fun get_quantities(self: &ItemDrop): vector<u256> {
    self.quantities
  }

  public fun get_actual_rates(self: &ItemDrop): vector<u256> {
    self.actual_rates
  }

  public fun get_rates(self: &ItemDrop): vector<u256> {
    self.rates
  }

  public(package) fun set_item_ids(self: &mut ItemDrop, item_ids: vector<u256>) {
    self.item_ids = item_ids;
  }

  public(package) fun set_quantities(self: &mut ItemDrop, quantities: vector<u256>) {
    self.quantities = quantities;
  }

  public(package) fun set_actual_rates(self: &mut ItemDrop, actual_rates: vector<u256>) {
    self.actual_rates = actual_rates;
  }

  public(package) fun set_rates(self: &mut ItemDrop, rates: vector<u256>) {
    self.rates = rates;
  }

  public(package) fun set(
    self: &mut ItemDrop,
    item_ids: vector<u256>,
    quantities: vector<u256>,
    actual_rates: vector<u256>,
    rates: vector<u256>,
  ) {
    self.item_ids = item_ids;
    self.quantities = quantities;
    self.actual_rates = actual_rates;
    self.rates = rates;
  }
}
