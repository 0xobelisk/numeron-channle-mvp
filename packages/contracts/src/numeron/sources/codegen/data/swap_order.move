  // Copyright (c) Obelisk Labs, Inc.
  // SPDX-License-Identifier: Apache-2.0
  #[allow(unused_use)]
  
  /* Autogenerated file. Do not edit manually. */
  
  module numeron::numeron_swap_order {

  use std::ascii::String;

  use numeron::numeron_item::Item;

  public struct SwapOrder has copy, drop, store {
    id: u256,
    creator: address,
    items: vector<Item>,
    expected_items: vector<Item>,
    created_at: u64,
    expired_at: u64,
  }

  public fun new(
    id: u256,
    creator: address,
    items: vector<Item>,
    expected_items: vector<Item>,
    created_at: u64,
    expired_at: u64,
  ): SwapOrder {
    SwapOrder {
                                   id,creator,items,expected_items,created_at,expired_at
                               }
  }

  public fun get(self: &SwapOrder): (u256,address,vector<Item>,vector<Item>,u64,u64) {
    (self.id,self.creator,self.items,self.expected_items,self.created_at,self.expired_at)
  }

  public fun get_id(self: &SwapOrder): u256 {
    self.id
  }

  public fun get_creator(self: &SwapOrder): address {
    self.creator
  }

  public fun get_items(self: &SwapOrder): vector<Item> {
    self.items
  }

  public fun get_expected_items(self: &SwapOrder): vector<Item> {
    self.expected_items
  }

  public fun get_created_at(self: &SwapOrder): u64 {
    self.created_at
  }

  public fun get_expired_at(self: &SwapOrder): u64 {
    self.expired_at
  }

  public(package) fun set_id(self: &mut SwapOrder, id: u256) {
    self.id = id;
  }

  public(package) fun set_creator(self: &mut SwapOrder, creator: address) {
    self.creator = creator;
  }

  public(package) fun set_items(self: &mut SwapOrder, items: vector<Item>) {
    self.items = items;
  }

  public(package) fun set_expected_items(self: &mut SwapOrder, expected_items: vector<Item>) {
    self.expected_items = expected_items;
  }

  public(package) fun set_created_at(self: &mut SwapOrder, created_at: u64) {
    self.created_at = created_at;
  }

  public(package) fun set_expired_at(self: &mut SwapOrder, expired_at: u64) {
    self.expired_at = expired_at;
  }

  public(package) fun set(
    self: &mut SwapOrder,
    id: u256,
    creator: address,
    items: vector<Item>,
    expected_items: vector<Item>,
    created_at: u64,
    expired_at: u64,
  ) {
    self.id = id;
    self.creator = creator;
    self.items = items;
    self.expected_items = expected_items;
    self.created_at = created_at;
    self.expired_at = expired_at;
  }
}
