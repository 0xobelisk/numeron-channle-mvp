  // Copyright (c) Obelisk Labs, Inc.
  // SPDX-License-Identifier: Apache-2.0
  #[allow(unused_use)]
  
  /* Autogenerated file. Do not edit manually. */
  
  module numeron::numeron_craft_path {

  use std::ascii::String;

  public struct CraftPath has copy, drop, store {
    input_item_ids: vector<u256>,
    input_quantities: vector<u256>,
    output_quantities: u256,
  }

  public fun new(input_item_ids: vector<u256>, input_quantities: vector<u256>, output_quantities: u256): CraftPath {
    CraftPath {
                                   input_item_ids,input_quantities,output_quantities
                               }
  }

  public fun get(self: &CraftPath): (vector<u256>,vector<u256>,u256) {
    (self.input_item_ids,self.input_quantities,self.output_quantities)
  }

  public fun get_input_item_ids(self: &CraftPath): vector<u256> {
    self.input_item_ids
  }

  public fun get_input_quantities(self: &CraftPath): vector<u256> {
    self.input_quantities
  }

  public fun get_output_quantities(self: &CraftPath): u256 {
    self.output_quantities
  }

  public(package) fun set_input_item_ids(self: &mut CraftPath, input_item_ids: vector<u256>) {
    self.input_item_ids = input_item_ids;
  }

  public(package) fun set_input_quantities(self: &mut CraftPath, input_quantities: vector<u256>) {
    self.input_quantities = input_quantities;
  }

  public(package) fun set_output_quantities(self: &mut CraftPath, output_quantities: u256) {
    self.output_quantities = output_quantities;
  }

  public(package) fun set(
    self: &mut CraftPath,
    input_item_ids: vector<u256>,
    input_quantities: vector<u256>,
    output_quantities: u256,
  ) {
    self.input_item_ids = input_item_ids;
    self.input_quantities = input_quantities;
    self.output_quantities = output_quantities;
  }
}
