  // Copyright (c) Obelisk Labs, Inc.
  // SPDX-License-Identifier: Apache-2.0
  #[allow(unused_use)]
  
  /* Autogenerated file. Do not edit manually. */
  
  module numeron::numeron_events {

  use std::ascii::{String, string};

  use numeron::numeron_monster_type::MonsterType;

  use numeron::numeron_monster_ball_type::MonsterBallType;

  use numeron::numeron_monster_catch_result::MonsterCatchResult;

  use numeron::numeron_map_config::MapConfig;

  use numeron::numeron_position::Position;

  use numeron::numeron_encounter_info::EncounterInfo;

  use numeron::numeron_stats::Stats;

  use numeron::numeron_monster_info::MonsterInfo;

  use numeron::numeron_item_type::ItemType;

  use numeron::numeron_item_metadata::ItemMetadata;

  use numeron::numeron_item::Item;

  use numeron::numeron_item_drop::ItemDrop;

  use numeron::numeron_craft_path::CraftPath;

  use numeron::numeron_swap_order::SwapOrder;

  use numeron::numeron_trade_order::TradeOrder;

  use numeron::numeron_item_dropped_event::ItemDroppedEvent;

  use numeron::numeron_item_dropped_event;

  public fun item_dropped_event(name: String, player: address, item_id: u256, quantities: u256, random: u256) {
    dubhe::storage_event::emit_set_record<ItemDroppedEvent, ItemDroppedEvent, ItemDroppedEvent>(
				string(b"item_dropped_event"),
				option::none(),
			  	option::none(),
			  option::some(numeron_item_dropped_event::new(name,player,item_id,quantities,random))
			  )
  }

  use numeron::numeron_player_registered_event::PlayerRegisteredEvent;

  use numeron::numeron_player_registered_event;

  public fun player_registered_event(player: address, position: Position) {
    dubhe::storage_event::emit_set_record<PlayerRegisteredEvent, PlayerRegisteredEvent, PlayerRegisteredEvent>(
				string(b"player_registered_event"),
				option::none(),
			  	option::none(),
			  option::some(numeron_player_registered_event::new(player,position))
			  )
  }

  use numeron::numeron_monster_catch_attempt_event::MonsterCatchAttemptEvent;

  use numeron::numeron_monster_catch_attempt_event;

  public fun monster_catch_attempt_event(player: address, monster_id: u256, result: MonsterCatchResult) {
    dubhe::storage_event::emit_set_record<MonsterCatchAttemptEvent, MonsterCatchAttemptEvent, MonsterCatchAttemptEvent>(
				string(b"monster_catch_attempt_event"),
				option::none(),
			  	option::none(),
			  option::some(numeron_monster_catch_attempt_event::new(player,monster_id,result))
			  )
  }
}
