// Copyright (c) Obelisk Labs, Inc.
// SPDX-License-Identifier: Apache-2.0
#[allow(unused_use)]

/* Autogenerated file. Do not edit manually. */

module numeron::numeron_deploy_hook {

  use numeron::numeron_schema::Schema;
  use dubhe::dubhe_schema::Schema as DubheSchema;
  use numeron::numeron_dapp_key;
  use std::ascii::string;
  use numeron::numeron_map_config;
  use numeron::numeron_position;
  use numeron::numeron_monster_info;
  use numeron::numeron_item_type;
  use numeron::numeron_item_system;

  public(package) fun run(dubhe_schema: &mut DubheSchema, schema: &mut Schema, _ctx: &mut TxContext) {
    let dapp_key = numeron_dapp_key::new();

    // Map Config ================================================================
    schema.map_config().set(
      dubhe_schema, 
      dapp_key, 
      0,  
      numeron_map_config::new(20, 34, string(b"link"))
    );
    schema.map_config().set(
      dubhe_schema, 
      dapp_key, 
      1,  
      numeron_map_config::new(13, 9, string(b"link"))
    );
    schema.map_config().set(
      dubhe_schema, 
      dapp_key, 
      2,  
      numeron_map_config::new(13, 9, string(b"link"))
    );

    let map_0_encounter= vector[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
            0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
            0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
            0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
            0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
            0, 0, 0, 0, 194, 194, 194, 194, 194, 194, 194, 194, 194, 194, 194, 194, 0, 0, 0, 0,
            0, 0, 194, 194, 194, 194, 194, 194, 194, 194, 194, 194, 194, 194, 194, 194, 194, 194, 0, 0,
            0, 0, 194, 194, 194, 194, 194, 194, 194, 194, 194, 194, 194, 194, 194, 194, 194, 194, 0, 0,
            0, 0, 0, 0, 194, 194, 194, 194, 194, 194, 194, 194, 194, 194, 194, 194, 0, 0, 0, 0,
            0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
            0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 194, 194, 0, 0, 0, 0, 0, 0, 0, 0,
            0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 194, 194, 0, 0, 0, 0, 0, 0, 0, 0,
            0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
            0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
            0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 194, 194, 0, 0, 0, 0, 0, 0, 0, 0,
            0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 194, 194, 0, 0, 0, 0, 0, 0, 0, 0,
            0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 194, 194, 0, 0, 0, 0, 0, 0, 0, 0,
            0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
            0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
            0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
            0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
            0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
            0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
            0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
            0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
            0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
            0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
            0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
            0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
            0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
            0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
            0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
            0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
            0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];

    let map_1_collision = vector[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189,
        189, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 189,
        189, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 189,
        189, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 189,
        189, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 189,
        189, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 189,
        189, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 189,
        189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 0, 0, 189, 189, 189, 189, 189, 189, 189, 189,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 189, 0, 0, 189, 0, 0, 0, 0, 0, 0, 189,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 189, 0, 0, 189, 0, 0, 0, 0, 0, 0, 189,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 189, 0, 0, 189, 0, 0, 0, 0, 0, 0, 189,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 189, 0, 0, 189, 0, 0, 0, 0, 0, 0, 189,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 189, 0, 0, 189, 0, 0, 0, 0, 0, 0, 189,
        189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 0, 0, 189, 189, 189, 189, 189, 189, 189, 189,
        189, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 189,
        189, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 189,
        189, 0, 0, 0, 189, 189, 189, 189, 0, 0, 0, 0, 189, 189, 189, 189, 0, 0, 0, 189,
        189, 0, 0, 189, 189, 189, 189, 189, 0, 0, 0, 189, 189, 189, 189, 189, 0, 0, 0, 189,
        189, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 189,
        189, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 189,
        189, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 189,
        189, 0, 0, 0, 189, 189, 189, 189, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 189,
        189, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 189,
        189, 0, 0, 0, 0, 0, 0, 0, 0, 0, 189, 189, 189, 189, 189, 0, 0, 0, 0, 189,
        189, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 189,
        189, 0, 0, 0, 0, 0, 0, 0, 0, 0, 189, 189, 189, 189, 189, 189, 0, 0, 0, 189,
        189, 0, 0, 0, 189, 189, 189, 189, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 189,
        189, 0, 0, 0, 189, 0, 0, 189, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 189,
        189, 0, 0, 0, 189, 0, 0, 189, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 189,
        189, 0, 0, 0, 189, 0, 0, 189, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 189,
        189, 189, 189, 189, 189, 0, 0, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189];

    let width = 20;
    let height = 34;
    let y: u64 = 0;
    let x: u64 = 0;
    y.range_do!(height, |y| {
        x.range_do!(width, |x| {
            let index = y * width + x;
            if(map_0_encounter[index] != 0) {
                schema.encounter_trigger().set(
                  dubhe_schema, 
                  dapp_key, 
                  numeron_position::new(0, x, y), 
                  true
                );
            };
            if(map_1_collision[index] != 0) {
                schema.obstruction().set(
                  dubhe_schema, 
                  dapp_key, 
                  numeron_position::new(0, x, y), 
                  true
                );
            };
        })
    });

    let map_1_collision = vector[
        122, 122, 122, 122, 122, 122, 122, 122, 122, 122, 122, 122, 122, 122, 122, 122, 122, 122, 122, 122, 122, 122,
        122, 122, 122, 122, 122, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 122, 122, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 122, 122,
        0, 0, 0, 0, 122, 122, 122, 122, 0, 0, 0, 122, 122, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 122, 122, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 122, 122, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 122, 122, 122, 122, 122, 122, 122, 122, 122, 122, 122,
        122, 122, 122
    ];

    let width = 13;
    let height = 9;
    let y: u64 = 0;
    let x: u64 = 0;
    y.range_do!(height, |y| {
        x.range_do!(width, |x| {
            let index = y * width + x;
            if(map_1_collision[index] != 0) {
                schema.obstruction().set(
                  dubhe_schema, 
                  dapp_key, 
                  numeron_position::new(1, x, y), 
                  true
                );
                schema.obstruction().set(
                  dubhe_schema, 
                  dapp_key, 
                  numeron_position::new(2, x, y), 
                  true
                );
            };
        })
    });

    // main -> building1
    schema.teleport_point().set(
      dubhe_schema, 
      dapp_key, 
      numeron_position::new(0, 6, 21), 
      numeron_position::new(1, 5, 7)
    );
    // main -> building2
    schema.teleport_point().set(
      dubhe_schema, 
      dapp_key, 
      numeron_position::new(0, 13, 21), 
      numeron_position::new(2, 5, 7)
    );
    // building1 -> main
    schema.teleport_point().set(
      dubhe_schema, 
      dapp_key, 
      numeron_position::new(1, 5, 7), 
      numeron_position::new(0, 6, 21)
    );
    // building2 -> main
    schema.teleport_point().set(
      dubhe_schema, 
      dapp_key, 
      numeron_position::new(2, 5, 7), 
      numeron_position::new(0, 13, 21)
    );

    // Encounter Config ================================================================
    schema.encounter_monster().set(
      dubhe_schema, 
      dapp_key, 
      vector[
        numeron_monster_info::new(string(b"iguanignite"),0,25,25,vector[2],5,5,5,50,125),
        numeron_monster_info::new(string(b"carnodusk"),0,25,25,vector[1],5,8,5,52,125),
        numeron_monster_info::new(string(b"ignivolt"),0,25,25,vector[2],5,9,5,51,125),
        numeron_monster_info::new(string(b"aquavalor"),0,25,25,vector[1],5,12,5,50,125),
        numeron_monster_info::new(string(b"frostsaber"),0,25,25,vector[1],5,10,5,52,125),
    ]);
    schema.next_monster_id().set(
      dubhe_schema, 
      dapp_key, 
      0
    );

    // Item Config ================================================================
    schema.next_item_id().set(
      dubhe_schema, 
      dapp_key, 
      0
    );
    let ball = numeron_item_type::new_ball();
    let currency = numeron_item_type::new_currency();
    let medicine = numeron_item_type::new_medicine();
    let scroll = numeron_item_type::new_scroll();
    let treasure_chest = numeron_item_type::new_treasure_chest();
    let material = numeron_item_type::new_material();
    // 0
    numeron_item_system::register(
      dubhe_schema, 
      schema, 
      currency, 
      string(b"https://raw.githubusercontent.com/NumeronOS/numeron-assets/refs/heads/main/assets/images/items/gold-coin.png"), 
      string(b"Gold Coin"), 
      string(b"Used to buy items"), 
      false
    );
    // 1
    numeron_item_system::register(
      dubhe_schema, 
      schema, 
      medicine, 
      string(b"https://raw.githubusercontent.com/NumeronOS/numeron-assets/refs/heads/main/assets/images/items/source-number-crystal.png"), 
      string(b"Source Number Crystal"), 
      string(b"Used to fully restore a sprite's status (100%)"), 
      true
    );
    // 2
    numeron_item_system::register(
      dubhe_schema, 
      schema, 
      medicine, 
      string(b"https://raw.githubusercontent.com/NumeronOS/numeron-assets/refs/heads/main/assets/images/items/source-number-powder.png"), 
      string(b"Source Number Powder"), 
      string(b"Used to partially restore a sprite's status (50%)"), 
      true
    );
    // 3
    numeron_item_system::register(
      dubhe_schema, 
      schema, 
      scroll, 
      string(b"https://raw.githubusercontent.com/NumeronOS/numeron-assets/refs/heads/main/assets/images/items/escape-scroll.png"), 
      string(b"Escape Scroll"), 
      string(b"Used to allow a sprite to escape from battle"), 
      true
    );
    // 4
    numeron_item_system::register(
      dubhe_schema, 
      schema, 
      ball, 
      string(b"https://raw.githubusercontent.com/NumeronOS/numeron-assets/refs/heads/main/assets/images/items/low-level-ball.png"), 
      string(b"Low-Level Ball"), 
      string(b"Used to capture and store sprites"), 
      true
    );
    // 5
    numeron_item_system::register(
      dubhe_schema, 
      schema, 
      ball, 
      string(b"https://raw.githubusercontent.com/NumeronOS/numeron-assets/refs/heads/main/assets/images/items/mid-level-ball.png"), 
      string(b"Mid-Level Ball"), 
      string(b"Used to capture and store sprites (higher success rate)"), 
      true
    );
    // 6
    numeron_item_system::register(
      dubhe_schema, 
      schema, 
      ball, 
      string(b"https://raw.githubusercontent.com/NumeronOS/numeron-assets/refs/heads/main/assets/images/items/high-level-ball.png"), 
      string(b"High-Level Ball"), 
      string(b"Used to capture and store sprites (highest success rate)"), 
      true
    );
    // 7
    numeron_item_system::register(
      dubhe_schema, 
      schema, 
      treasure_chest, 
      string(b"https://raw.githubusercontent.com/NumeronOS/numeron-assets/refs/heads/main/assets/images/items/copper-treasure-chest.png"), 
      string(b"Copper Treasure Chest"), 
      string(b"A sturdy, rustic chest with a bronze hue, holding basic treasures."), 
      true
    );
    // 8
    numeron_item_system::register(
      dubhe_schema, 
      schema, 
      treasure_chest, 
      string(b"https://raw.githubusercontent.com/NumeronOS/numeron-assets/refs/heads/main/assets/images/items/silver-treasure-chest.png"), 
      string(b"Silver Treasure Chest"), 
      string(b"A sleek, polished chest that gleams softly, containing valuable rewards."), 
      true
    );
    // 9
    numeron_item_system::register(
      dubhe_schema, 
      schema, 
      treasure_chest, 
      string(b"https://raw.githubusercontent.com/NumeronOS/numeron-assets/refs/heads/main/assets/images/items/gold-treasure-chest.png"), 
      string(b"Gold Treasure Chest"), 
      string(b"A radiant, ornate chest that sparkles, brimming with rare and precious loot."), 
      true
    );
    // 10
    numeron_item_system::register(
      dubhe_schema, 
      schema, 
      material, 
      string(b"https://raw.githubusercontent.com/NumeronOS/numeron-assets/refs/heads/main/assets/images/items/metals.png"), 
      string(b"Metals"), 
      string(b"Used to craft items"), 
      true
    );
    // 11
    numeron_item_system::register(
      dubhe_schema, 
      schema, 
      material, 
      string(b"https://raw.githubusercontent.com/NumeronOS/numeron-assets/refs/heads/main/assets/images/items/key.png"), 
      string(b"Key"), 
      string(b"Used to unlock the treasure chest"), 
      true
    );

    numeron_item_system::update_move_drop_config(
      dubhe_schema, 
      schema, 
      vector[3, 0, 1, 10, 6, 7, 8, 9, 4, 5], 
      vector[1, 5, 1, 2, 1, 1, 1, 1, 1, 1], 
      vector[1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000], 
      _ctx
    );

    // numeron_item_system::update_chest_drop_config(
    //   dubhe_schema, 
    //   schema, 
    //   7,
    //   vector[1024, 10, 1024, 0, 1024, 1024, 1024, 1], 
    //   vector[1000, 1, 10, 5000, 5, 3, 1, 10], 
    //   vector[4, 36, 356, 712, 1067, 1779, 2846, 3200], 
    //   _ctx
    // );

    // numeron_item_system::update_chest_drop_config(
    //   dubhe_schema, 
    //   schema, 
    //   8,
    //   vector[1024, 10, 1024, 0, 1024, 1024, 1024, 1], 
    //   vector[1000, 1, 10, 5000, 5, 3, 1, 10], 
    //   vector[4, 36, 356, 712, 1067, 1779, 2846, 3200],  
    //   _ctx
    // );

    // numeron_item_system::update_chest_drop_config(
    //   dubhe_schema, 
    //   schema, 
    //   9,
    //   vector[1024, 10, 1024, 0, 1024, 1024, 1024, 1], 
    //   vector[1000, 1, 10, 5000, 5, 3, 1, 10], 
    //   vector[4, 36, 356, 712, 1067, 1779, 2846, 3200], 
    //   _ctx
    // );

    numeron_item_system::update_encounter_drop_config(
      dubhe_schema, 
      schema, 
      vector[9, 0, 1, 10], 
      vector[1, 1000, 10, 5], 
      vector[400, 300, 200, 100], 
      _ctx
    );

    numeron_item_system::update_craft_path(
      dubhe_schema, 
      schema, 
      6, 
      vector[0, 3], 
      vector[10, 1], 
      1, 
      _ctx
    );
    numeron_item_system::update_craft_path(
      dubhe_schema, 
      schema, 
      7, 
      vector[0, 3], 
      vector[100, 5], 
      1, 
      _ctx
    );
    numeron_item_system::update_craft_path(
      dubhe_schema, 
      schema, 
      8, 
      vector[0, 3, 12], 
      vector[300, 10, 1], 
      1, 
      _ctx
    );

    // let dapp_key = numeron_dapp_key::new();
    // let asset_id = dubhe::dubhe_assets_system::create_asset(
    //     dubhe_schema, 
    //     dapp_key, 
    //     string(b"Numeron diamond"),
    //     string(b"NUM"), 
    //     string(b"Numeron diamond is a item in the Numeron game."), 
    //     9,
    //     string(b"https://raw.githubusercontent.com/NumeronOS/numeron-assets/refs/heads/main/assets/images/items/diamond.png"), 
    //     _ctx.sender(),
    //     true, 
    //     true, 
    //     true
    // );
    // schema.num_asset_id().set(
    //     dubhe_schema,
    //     dapp_key,
    //     asset_id
    // );

    // schema.key_price().set(
    //     dubhe_schema,
    //     dapp_key,
    //     1 * 1000000000
    // );
    // // 1%
    // schema.order_fee_rate().set(
    //     dubhe_schema,
    //     dapp_key,
    //     100
    // );
    // schema.next_order_id().set(
    //     dubhe_schema, 
    //     dapp_key, 
    //     0
    // );
  }
}
