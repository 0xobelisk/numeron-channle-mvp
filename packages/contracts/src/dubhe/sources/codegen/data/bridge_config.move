  // Copyright (c) Obelisk Labs, Inc.
  // SPDX-License-Identifier: Apache-2.0
  #[allow(unused_use)]
  
  /* Autogenerated file. Do not edit manually. */
  
  module dubhe::dubhe_bridge_config {

  use std::ascii::String;

  public struct BridgeConfig has copy, drop, store {
    min_amount: u256,
    fee: u256,
    opened: bool,
  }

  public fun new(min_amount: u256, fee: u256, opened: bool): BridgeConfig {
    BridgeConfig {
                                   min_amount,fee,opened
                               }
  }

  public fun get(self: &BridgeConfig): (u256,u256,bool) {
    (self.min_amount,self.fee,self.opened)
  }

  public fun get_min_amount(self: &BridgeConfig): u256 {
    self.min_amount
  }

  public fun get_fee(self: &BridgeConfig): u256 {
    self.fee
  }

  public fun get_opened(self: &BridgeConfig): bool {
    self.opened
  }

  public(package) fun set_min_amount(self: &mut BridgeConfig, min_amount: u256) {
    self.min_amount = min_amount;
  }

  public(package) fun set_fee(self: &mut BridgeConfig, fee: u256) {
    self.fee = fee;
  }

  public(package) fun set_opened(self: &mut BridgeConfig, opened: bool) {
    self.opened = opened;
  }

  public(package) fun set(self: &mut BridgeConfig, min_amount: u256, fee: u256, opened: bool) {
    self.min_amount = min_amount;
    self.fee = fee;
    self.opened = opened;
  }
}
